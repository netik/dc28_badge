

/* Start of automatically generated font definition for portfolio. */

#ifndef MF_BWFONT_INTERNALS
#define MF_BWFONT_INTERNALS
#endif
#include "mf_bwfont.h"

#ifndef MF_BWFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const gU8 mf_bwfont_portfolio_glyph_data_0[576] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 
    0x00, 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14, 0x00, 0x24, 0x2a, 0x6b, 0x2a, 0x12, 0x00, 0x23, 0x13, 
    0x08, 0x64, 0x62, 0x00, 0x36, 0x49, 0x55, 0x22, 0x50, 0x00, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 
    0x00, 0x1c, 0x22, 0x41, 0x00, 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00, 0x00, 0x14, 0x08, 0x3e, 0x08, 
    0x14, 0x00, 0x08, 0x08, 0x3e, 0x08, 0x08, 0x00, 0x00, 0x00, 0x50, 0x30, 0x00, 0x00, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 
    0x3e, 0x51, 0x49, 0x45, 0x3e, 0x00, 0x00, 0x42, 0x7f, 0x40, 0x00, 0x00, 0x42, 0x61, 0x51, 0x49, 
    0x46, 0x00, 0x21, 0x41, 0x45, 0x4b, 0x31, 0x00, 0x18, 0x14, 0x12, 0x7f, 0x10, 0x00, 0x27, 0x45, 
    0x45, 0x45, 0x39, 0x00, 0x3c, 0x4a, 0x49, 0x49, 0x30, 0x00, 0x01, 0x01, 0x79, 0x05, 0x03, 0x00, 
    0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x06, 0x49, 0x49, 0x29, 0x1e, 0x00, 0x00, 0x00, 0x36, 0x36, 
    0x00, 0x00, 0x00, 0x00, 0x56, 0x36, 0x00, 0x00, 0x00, 0x08, 0x14, 0x22, 0x41, 0x00, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0x00, 0x41, 0x22, 0x14, 0x08, 0x00, 0x00, 0x02, 0x01, 0x51, 0x09, 0x06, 0x00, 
    0x3e, 0x41, 0x49, 0x55, 0x0e, 0x00, 0x7e, 0x11, 0x11, 0x11, 0x7e, 0x00, 0x7f, 0x49, 0x49, 0x49, 
    0x36, 0x00, 0x3e, 0x41, 0x41, 0x41, 0x22, 0x00, 0x7f, 0x41, 0x41, 0x22, 0x1c, 0x00, 0x7f, 0x49, 
    0x49, 0x49, 0x41, 0x00, 0x7f, 0x09, 0x09, 0x09, 0x01, 0x00, 0x3e, 0x41, 0x51, 0x51, 0x72, 0x00, 
    0x7f, 0x08, 0x08, 0x08, 0x7f, 0x00, 0x00, 0x41, 0x7f, 0x41, 0x00, 0x00, 0x20, 0x40, 0x41, 0x3f, 
    0x01, 0x00, 0x7f, 0x08, 0x14, 0x22, 0x41, 0x00, 0x7f, 0x40, 0x40, 0x40, 0x40, 0x00, 0x7f, 0x02, 
    0x0c, 0x02, 0x7f, 0x00, 0x7f, 0x04, 0x08, 0x10, 0x7f, 0x00, 0x3e, 0x41, 0x41, 0x41, 0x3e, 0x00, 
    0x7f, 0x09, 0x09, 0x09, 0x06, 0x00, 0x3e, 0x41, 0x51, 0x21, 0x5e, 0x00, 0x7f, 0x09, 0x19, 0x29, 
    0x46, 0x00, 0x26, 0x49, 0x49, 0x49, 0x32, 0x00, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x00, 0x3f, 0x40, 
    0x40, 0x40, 0x3f, 0x00, 0x1f, 0x20, 0x40, 0x20, 0x1f, 0x00, 0x7f, 0x20, 0x18, 0x20, 0x7f, 0x00, 
    0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x07, 0x08, 0x78, 0x08, 0x07, 0x00, 0x61, 0x51, 0x49, 0x45, 
    0x43, 0x00, 0x00, 0x7f, 0x41, 0x41, 0x00, 0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, 0x41, 
    0x41, 0x7f, 0x00, 0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x00, 0x03, 0x05, 0x00, 0x00, 0x00, 0x20, 0x54, 0x54, 0x54, 0x78, 0x00, 0x7f, 0x48, 0x44, 0x44, 
    0x38, 0x00, 0x38, 0x44, 0x44, 0x44, 0x20, 0x00, 0x38, 0x44, 0x44, 0x48, 0x7f, 0x00, 0x38, 0x54, 
    0x54, 0x54, 0x58, 0x00, 0x08, 0x7e, 0x09, 0x09, 0x02, 0x00, 0x08, 0x54, 0x54, 0x54, 0x3c, 0x00, 
    0x7f, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00, 0x44, 0x7d, 0x40, 0x00, 0x00, 0x20, 0x40, 0x44, 0x3d, 
    0x00, 0x00, 0x7f, 0x20, 0x10, 0x28, 0x44, 0x00, 0x00, 0x41, 0x7f, 0x40, 0x00, 0x00, 0x7c, 0x04, 
    0x18, 0x04, 0x78, 0x00, 0x7c, 0x08, 0x04, 0x04, 0x78, 0x00, 0x38, 0x44, 0x44, 0x44, 0x38, 0x00, 
    0x7c, 0x14, 0x14, 0x14, 0x08, 0x00, 0x08, 0x14, 0x14, 0x14, 0x7c, 0x00, 0x7c, 0x08, 0x04, 0x04, 
    0x08, 0x00, 0x48, 0x54, 0x54, 0x54, 0x24, 0x00, 0x04, 0x3f, 0x44, 0x44, 0x20, 0x00, 0x3c, 0x40, 
    0x40, 0x20, 0x7c, 0x00, 0x1c, 0x20, 0x40, 0x20, 0x1c, 0x00, 0x3c, 0x40, 0x30, 0x40, 0x3c, 0x00, 
    0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x4c, 0x50, 0x50, 0x50, 0x3c, 0x00, 0x44, 0x64, 0x54, 0x4c, 
    0x44, 0x00, 0x00, 0x08, 0x3e, 0x41, 0x41, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x41, 0x41, 
    0x3e, 0x08, 0x00, 0x00, 0x02, 0x01, 0x03, 0x02, 0x01, 0x00, 0x30, 0x28, 0x24, 0x28, 0x30, 0x00, 
};

static const struct mf_bwfont_char_range_s mf_bwfont_portfolio_char_ranges[] = {
    {
        32, /* first char */
        96, /* char count */
        0, /* offset x */
        0, /* offset y */
        1, /* height in bytes */
        8, /* height in pixels */
        6, /* width */
        0, /* glyph widths */
        0, /* glyph offsets */
        mf_bwfont_portfolio_glyph_data_0, /* glyph data */
    },
};

const struct mf_bwfont_s mf_bwfont_portfolio = {
    {
    "Px437 Portfolio 6x8 Regular 8",
    "portfolio",
    6, /* width */
    8, /* height */
    6, /* min x advance */
    6, /* max x advance */
    0, /* baseline x */
    7, /* baseline y */
    8, /* line height */
    3, /* flags */
    63, /* fallback character */
    &mf_bwfont_character_width,
    &mf_bwfont_render_character,
    },
    4, /* version */
    1, /* char range count */
    mf_bwfont_portfolio_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_bwfont_portfolio_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_bwfont_portfolio
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_bwfont_portfolio_listentry)
#endif


/* End of automatically generated font definition for portfolio. */

