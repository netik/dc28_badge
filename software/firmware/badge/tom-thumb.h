

/* Start of automatically generated font definition for tom_thumb. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const gU8 mf_rlefont_tom_thumb_dictionary_data[1059] = {
    0x01, 0x80, 0x02, 0x80, 0x81, 0x80, 0x01, 0x02, 0x80, 0x02, 0x01, 0x80, 0x01, 0x80, 0x81, 0x01, 
    0x04, 0x02, 0x02, 0x80, 0x01, 0x01, 0x80, 0x01, 0x01, 0x80, 0x03, 0x82, 0x01, 0x80, 0x02, 0x80, 
    0x01, 0x07, 0x06, 0x01, 0x81, 0x81, 0x01, 0x80, 0x81, 0x03, 0x03, 0x0b, 0x08, 0x82, 0x02, 0x01, 
    0x80, 0x80, 0x01, 0x80, 0x01, 0x81, 0x01, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x03, 0x03, 0x82, 
    0x01, 0x80, 0x03, 0x80, 0x01, 0x0a, 0x80, 0x01, 0x80, 0x01, 0x82, 0x80, 0x01, 0x84, 0x01, 0x81, 
    0x02, 0x80, 0x02, 0x80, 0x03, 0x80, 0x02, 0x02, 0x82, 0x01, 0x83, 0x80, 0x04, 0x82, 0x01, 0x80, 
    0x01, 0x84, 0x81, 0x01, 0x83, 0x02, 0x80, 0x01, 0x81, 0x01, 0x82, 0x81, 0x02, 0x02, 0x83, 0x80, 
    0x01, 0x80, 0x01, 0x80, 0x01, 0x82, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x81, 0x01, 0x81, 
    0x01, 0x80, 0x01, 0x80, 0x01, 0x82, 0x01, 0x80, 0x02, 0x80, 0x04, 0x01, 0x80, 0x01, 0x80, 0x01, 
    0x80, 0x01, 0x80, 0x80, 0x01, 0x80, 0x82, 0x02, 0x80, 0x82, 0x03, 0x80, 0x80, 0x01, 0x83, 0x03, 
    0x82, 0x02, 0x01, 0x80, 0x01, 0x80, 0x02, 0x82, 0x01, 0x80, 0x01, 0x82, 0x01, 0x80, 0x02, 0x80, 
    0x02, 0x80, 0x02, 0x82, 0x80, 0x01, 0x80, 0x01, 0x81, 0x01, 0x80, 0x80, 0x01, 0x80, 0x01, 0x80, 
    0x01, 0x80, 0x01, 0x81, 0x01, 0x82, 0x01, 0x80, 0x01, 0x81, 0x01, 0x80, 0x02, 0x82, 0x05, 0x01, 
    0x80, 0x01, 0x80, 0x08, 0x80, 0x01, 0x82, 0x02, 0x01, 0x80, 0x01, 0x81, 0x80, 0x01, 0x80, 0x01, 
    0x80, 0x04, 0x0e, 0x80, 0x01, 0x80, 0x01, 0x80, 0x0c, 0x02, 0x80, 0x01, 0x80, 0x01, 0x83, 0x01, 
    0x80, 0x06, 0x80, 0x02, 0x85, 0x02, 0x81, 0x81, 0x02, 0x80, 0x03, 0x80, 0x01, 0x80, 0x81, 0x01, 
    0x81, 0x01, 0x03, 0x80, 0x80, 0x01, 0x80, 0x04, 0x05, 0x81, 0x04, 0x82, 0x01, 0x82, 0x81, 0x01, 
    0x80, 0x01, 0x80, 0x01, 0x80, 0x05, 0x82, 0x01, 0x83, 0x01, 0x81, 0x01, 0x83, 0x01, 0x83, 0x01, 
    0x81, 0x04, 0x81, 0x80, 0x01, 0x82, 0x01, 0x80, 0x03, 0x09, 0x87, 0x84, 0x80, 0x01, 0x82, 0x03, 
    0x02, 0x84, 0x01, 0x81, 0x81, 0x01, 0x82, 0x80, 0x02, 0x83, 0x02, 0x80, 0x02, 0x83, 0x02, 0x03, 
    0x80, 0x0a, 0x01, 0x80, 0x09, 0x80, 0x01, 0x80, 0x03, 0x80, 0x01, 0x83, 0x01, 0x80, 0x02, 0x84, 
    0x01, 0x83, 0x02, 0x80, 0x02, 0x80, 0x02, 0x82, 0x03, 0x80, 0x01, 0x81, 0x01, 0x81, 0x01, 0x81, 
    0x01, 0x80, 0x01, 0x81, 0x03, 0x82, 0x07, 0x80, 0x02, 0x80, 0x01, 0x80, 0x01, 0x84, 0x03, 0x82, 
    0x01, 0x82, 0x01, 0x82, 0x01, 0x80, 0x01, 0x82, 0x01, 0x01, 0x82, 0x01, 0x80, 0x01, 0x82, 0x03, 
    0x82, 0x01, 0x82, 0x01, 0x80, 0x01, 0x82, 0x01, 0x80, 0x01, 0x80, 0x01, 0x81, 0x01, 0x80, 0x01, 
    0x81, 0x01, 0x80, 0x03, 0x80, 0x05, 0x80, 0x07, 0x01, 0x80, 0x02, 0x80, 0x01, 0x82, 0x01, 0x80, 
    0x03, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x04, 0x82, 0x03, 0x07, 0x80, 0x81, 0x01, 0x81, 
    0x01, 0x80, 0x02, 0x80, 0x02, 0x80, 0x04, 0x0c, 0x80, 0x01, 0x80, 0x01, 0x80, 0x02, 0x80, 0x02, 
    0x01, 0x80, 0x01, 0x80, 0x03, 0x80, 0x03, 0x80, 0x01, 0x80, 0x02, 0x81, 0x10, 0x82, 0x01, 0x80, 
    0x01, 0x81, 0x80, 0x02, 0x80, 0x02, 0x80, 0x02, 0x80, 0x03, 0x01, 0x81, 0x01, 0x80, 0x81, 0x02, 
    0x85, 0x01, 0x83, 0x02, 0x02, 0x83, 0x02, 0x83, 0x02, 0x81, 0x01, 0x82, 0x01, 0x80, 0x02, 0x81, 
    0x01, 0x80, 0x01, 0x81, 0x01, 0x82, 0x01, 0x01, 0x81, 0x01, 0x80, 0x01, 0x80, 0x01, 0x81, 0x01, 
    0x80, 0x01, 0x83, 0x01, 0x01, 0x84, 0x01, 0x80, 0x83, 0x83, 0x01, 0x84, 0x01, 0x80, 0x02, 0x0d, 
    0x01, 0x82, 0x01, 0x82, 0x03, 0x82, 0x01, 0x82, 0x02, 0x81, 0x03, 0x01, 0x82, 0x02, 0x83, 0x01, 
    0x80, 0x01, 0x81, 0x03, 0x80, 0x02, 0x80, 0x02, 0x80, 0x02, 0x80, 0x01, 0x82, 0x03, 0x05, 0x80, 
    0x80, 0x01, 0x80, 0x04, 0x84, 0x01, 0x81, 0x03, 0x01, 0x80, 0x02, 0x80, 0x02, 0x80, 0x02, 0x01, 
    0x83, 0x01, 0x82, 0x01, 0x83, 0x03, 0x01, 0x80, 0x03, 0x81, 0x02, 0x85, 0x01, 0x80, 0x80, 0x01, 
    0x80, 0x01, 0x81, 0x80, 0x01, 0x80, 0x01, 0x80, 0x02, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 
    0x01, 0x80, 0x04, 0x80, 0x05, 0x02, 0x81, 0x07, 0x01, 0x82, 0x02, 0x83, 0x01, 0x83, 0x01, 0x80, 
    0x02, 0x80, 0x06, 0x81, 0x02, 0x80, 0x01, 0x01, 0x80, 0x01, 0x80, 0x04, 0x80, 0x01, 0x80, 0x03, 
    0x80, 0x01, 0x81, 0x01, 0x83, 0x03, 0x80, 0x01, 0x80, 0x0d, 0x81, 0x02, 0x80, 0x01, 0x80, 0x01, 
    0x80, 0x03, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x04, 0x01, 0x80, 0x03, 0x80, 0x01, 0x80, 
    0x01, 0x80, 0x02, 0x80, 0x04, 0x02, 0x80, 0x03, 0x82, 0x01, 0x84, 0x02, 0x81, 0x03, 0x81, 0x02, 
    0x80, 0x01, 0x80, 0x05, 0x81, 0x82, 0x02, 0x80, 0x02, 0x80, 0x02, 0x83, 0x01, 0x02, 0x80, 0x01, 
    0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x80, 0x01, 0x81, 0x01, 0x80, 0x01, 0x01, 0x80, 0x02, 
    0x80, 0x01, 0x80, 0x04, 0x83, 0x02, 0x83, 0x04, 0x80, 0x01, 0x80, 0x06, 0x01, 0x83, 0x02, 0x83, 
    0x02, 0x80, 0x04, 0x01, 0x80, 0x01, 0x82, 0x01, 0x81, 0x02, 0x80, 0x02, 0x80, 0x02, 0x80, 0x02, 
    0x04, 0x89, 0x04, 0x02, 0x80, 0x01, 0x80, 0x02, 0x80, 0x02, 0x80, 0x03, 0x80, 0x03, 0x82, 0x01, 
    0x80, 0x01, 0x80, 0x82, 0x01, 0x81, 0x01, 0x80, 0x01, 0x81, 0x01, 0x80, 0x01, 0x80, 0x80, 0x01, 
    0x80, 0x03, 0x82, 0x01, 0x80, 0x01, 0x82, 0x03, 0x81, 0x01, 0x80, 0x03, 0x04, 0x80, 0x01, 0x80, 
    0x01, 0x80, 0x01, 0x80, 0x04, 0x80, 0x08, 0x81, 0x01, 0x83, 0x02, 0x80, 0x03, 0x80, 0x02, 0x81, 
    0x01, 0x02, 0x80, 0x02, 0x80, 0x02, 0x01, 0x80, 0x02, 0x80, 0x02, 0x80, 0x80, 0x01, 0x81, 0x01, 
    0x80, 0x01, 0x80, 0x01, 0x82, 0x01, 0x80, 0x83, 0x01, 0x83, 0x02, 0x82, 0x80, 0x02, 0x80, 0x02, 
    0x80, 0x02, 0x80, 0x01, 0x80, 0x05, 0x80, 0x04, 0x82, 0x01, 0x80, 0x02, 0x80, 0x02, 0x81, 0x02, 
    0x80, 0x02, 0x80, 0x01, 0x03, 0x83, 0x03, 0x82, 0x01, 0x80, 0x02, 0x80, 0x01, 0x84, 0x80, 0x02, 
    0x82, 0x01, 0x84, 0x01, 0x80, 0x01, 0x80, 0x01, 0x89, 0x03, 0x01, 0x82, 0x03, 0x81, 0x01, 0x80, 
    0x01, 0x81, 0x03, 0x80, 0x07, 0x03, 0x82, 0x02, 0x01, 0x82, 0x01, 0x80, 0x01, 0x80, 0x02, 0x82, 
    0x01, 0x80, 0x01, 0x81, 0x01, 0x82, 0x02, 0x80, 0x02, 0x80, 0x02, 0x01, 0x80, 0x01, 0x80, 0x03, 
    0x81, 0x04, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x04, 0x80, 0x01, 0x80, 0x01, 0x82, 0x82, 
    0x04, 0x80, 0x01, 0x80, 0x04, 0x0a, 0x80, 0x01, 0x80, 0x05, 0x01, 0x81, 0x01, 0x80, 0x09, 0x02, 
    0x83, 0x01, 0x83, 0x01, 0x80, 0x01, 0x80, 0x02, 0x83, 0x01, 0x83, 0x03, 0x01, 0x80, 0x01, 0x83, 
    0x80, 0x01, 0x80, 0x01, 0x81, 0x02, 0x01, 0x84, 0x01, 0x82, 0x03, 0x82, 0x02, 0x80, 0x02, 0x80, 
    0x02, 0x83, 0x02, 0x01, 0x82, 0x01, 0x81, 0x01, 0x81, 0x01, 0x82, 0x04, 0x80, 0x01, 0x80, 0x01, 
    0x80, 0x08, 0x01, 0x80, 0x03, 0x80, 0x01, 0x07, 0x80, 0x0a, 0x06, 0x82, 0x09, 0x06, 0x81, 0x02, 
    0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x83, 0x03, 0x85, 0x01, 0x80, 0x01, 0x80, 0x05, 0x02, 0x82, 
    0x01, 0x81, 0x01, 0x80, 0x01, 0x81, 0x01, 0x81, 0x01, 0x80, 0x03, 0x80, 0x01, 0x81, 0x01, 0x80, 
    0x01, 0x81, 0x03, 
};

static const gU16 mf_rlefont_tom_thumb_dictionary_offsets[233] = {
    0x0000, 0x0004, 0x0005, 0x0007, 0x000a, 0x000e, 0x0010, 0x0011, 
    0x0012, 0x0015, 0x0018, 0x001b, 0x0021, 0x0022, 0x0023, 0x0025, 
    0x0028, 0x002a, 0x002b, 0x002c, 0x002d, 0x002f, 0x0031, 0x0037, 
    0x003c, 0x003e, 0x0041, 0x0045, 0x0046, 0x004a, 0x004b, 0x0050, 
    0x0052, 0x0057, 0x0059, 0x005b, 0x005d, 0x0060, 0x0062, 0x0066, 
    0x0069, 0x006b, 0x006d, 0x006f, 0x007d, 0x0082, 0x008b, 0x0093, 
    0x0096, 0x0099, 0x009c, 0x00a2, 0x00a7, 0x00a9, 0x00b1, 0x00b4, 
    0x00bb, 0x00c1, 0x00cd, 0x00cf, 0x00d4, 0x00d8, 0x00dc, 0x00e2, 
    0x00e3, 0x00e8, 0x00e9, 0x00ee, 0x00f0, 0x00f2, 0x00f4, 0x00f5, 
    0x00f7, 0x00fe, 0x0102, 0x0104, 0x0108, 0x0109, 0x010b, 0x010e, 
    0x0113, 0x0116, 0x011a, 0x011e, 0x0121, 0x0123, 0x0129, 0x012a, 
    0x012b, 0x012c, 0x0130, 0x0134, 0x0137, 0x013d, 0x013f, 0x0142, 
    0x0145, 0x014f, 0x0151, 0x0159, 0x0165, 0x0167, 0x016b, 0x016e, 
    0x0170, 0x0179, 0x0180, 0x0187, 0x018d, 0x0193, 0x0198, 0x019b, 
    0x019e, 0x01a9, 0x01ab, 0x01ad, 0x01b0, 0x01b7, 0x01bc, 0x01c0, 
    0x01c9, 0x01cc, 0x01cd, 0x01d2, 0x01da, 0x01de, 0x01e4, 0x01e9, 
    0x01ed, 0x01f7, 0x01fd, 0x0200, 0x0204, 0x0208, 0x0209, 0x020f, 
    0x0210, 0x0214, 0x021b, 0x0224, 0x022e, 0x0230, 0x0238, 0x023f, 
    0x0242, 0x0246, 0x024b, 0x024e, 0x0253, 0x0259, 0x0263, 0x0265, 
    0x0268, 0x026f, 0x0277, 0x027c, 0x0286, 0x028a, 0x028d, 0x029a, 
    0x02a5, 0x02a8, 0x02ae, 0x02b3, 0x02b5, 0x02bd, 0x02c1, 0x02c7, 
    0x02cd, 0x02d3, 0x02d8, 0x02dc, 0x02e3, 0x02e7, 0x02f0, 0x02f3, 
    0x02fe, 0x0303, 0x0307, 0x030e, 0x0318, 0x031c, 0x0325, 0x0327, 
    0x032a, 0x032e, 0x0331, 0x0336, 0x033c, 0x0341, 0x0347, 0x034c, 
    0x0351, 0x0358, 0x035f, 0x0364, 0x0366, 0x036a, 0x036e, 0x0376, 
    0x037a, 0x037d, 0x0383, 0x0385, 0x0388, 0x038b, 0x0394, 0x039b, 
    0x03a0, 0x03aa, 0x03af, 0x03b2, 0x03b5, 0x03ba, 0x03bf, 0x03c4, 
    0x03cc, 0x03d0, 0x03d6, 0x03db, 0x03e3, 0x03ec, 0x03f2, 0x03f7, 
    0x03fa, 0x03fd, 0x0402, 0x0407, 0x040a, 0x040e, 0x0411, 0x0418, 
    0x0423, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_0[350] = {
    0x04, 0x00, 0x10, 0x04, 0x8c, 0xeb, 0x04, 0xd4, 0x10, 0x04, 0x7e, 0x9c, 0x10, 0x04, 0xc3, 0x04, 
    0x3b, 0xac, 0xb8, 0x04, 0x44, 0x92, 0x10, 0x04, 0x18, 0x10, 0x04, 0xc7, 0x04, 0x32, 0xc0, 0x10, 
    0x04, 0xad, 0x10, 0x04, 0x29, 0xd5, 0x10, 0x04, 0xec, 0x04, 0xf8, 0x04, 0x59, 0xeb, 0x04, 0x1b, 
    0x50, 0x68, 0x04, 0xf4, 0x04, 0x2d, 0xc5, 0x10, 0x04, 0x28, 0x50, 0xe0, 0x04, 0x1d, 0xbd, 0x7f, 
    0x10, 0x04, 0xd4, 0x48, 0xb8, 0x04, 0x35, 0x90, 0x7f, 0x10, 0x04, 0xb0, 0x10, 0x04, 0x2c, 0x50, 
    0x68, 0x04, 0x6b, 0xa8, 0x04, 0xd6, 0x10, 0x04, 0x00, 0x85, 0x04, 0x29, 0x68, 0xfc, 0x04, 0x37, 
    0x8f, 0x10, 0x04, 0x7f, 0x7f, 0x10, 0x04, 0x5d, 0xf6, 0xfc, 0x04, 0x35, 0xd8, 0x04, 0x83, 0x89, 
    0x28, 0x04, 0x2f, 0x79, 0xcc, 0x04, 0x27, 0x81, 0x10, 0x04, 0xe6, 0x26, 0x10, 0x04, 0xfe, 0x40, 
    0x10, 0x04, 0x5b, 0xa7, 0xe0, 0x04, 0x35, 0x74, 0x10, 0x04, 0xa2, 0x04, 0xd4, 0x5b, 0xcc, 0x04, 
    0x23, 0xc4, 0x10, 0x04, 0xda, 0x99, 0x10, 0x04, 0x51, 0x10, 0x04, 0x8e, 0x7d, 0xe0, 0x04, 0x87, 
    0x79, 0xcc, 0x04, 0x7e, 0xaa, 0x10, 0x04, 0xbe, 0xca, 0x10, 0x04, 0x1d, 0x4d, 0x10, 0x04, 0x2f, 
    0x6a, 0x28, 0x04, 0x67, 0x70, 0xe7, 0x04, 0xe4, 0xd0, 0x65, 0x04, 0x23, 0x18, 0x10, 0x04, 0x7b, 
    0x04, 0xd4, 0x50, 0xeb, 0x04, 0xd4, 0x70, 0xcc, 0x04, 0xbf, 0x4f, 0x10, 0x04, 0xd4, 0x8c, 0x04, 
    0x2c, 0x50, 0xe0, 0x04, 0x7a, 0x04, 0x00, 0x20, 0xd0, 0x10, 0x04, 0xbc, 0x10, 0x04, 0xbe, 0x10, 
    0x04, 0x2a, 0xe0, 0x04, 0x32, 0x10, 0x04, 0x29, 0x41, 0xa8, 0x04, 0x98, 0x10, 0x04, 0x6c, 0x7d, 
    0x5f, 0x10, 0x04, 0x37, 0xe4, 0xe1, 0x04, 0x00, 0xa1, 0x04, 0x37, 0x45, 0x04, 0x1e, 0x69, 0x2f, 
    0x04, 0x5d, 0xfe, 0x22, 0x04, 0xeb, 0x8c, 0x04, 0xb8, 0x20, 0x99, 0x10, 0x04, 0x1a, 0x55, 0xca, 
    0x10, 0x04, 0x0f, 0xa3, 0x04, 0xdb, 0xaa, 0x10, 0x04, 0x62, 0x2e, 0xcc, 0x04, 0x29, 0xbe, 0x56, 
    0x04, 0x62, 0x2e, 0x3c, 0x10, 0x04, 0x6c, 0xbf, 0xb5, 0x04, 0x6c, 0xd7, 0x10, 0x04, 0xc1, 0x04, 
    0x21, 0xd9, 0x10, 0x04, 0x62, 0x9a, 0xe1, 0x04, 0x1f, 0x84, 0x3c, 0x10, 0x04, 0x29, 0xdf, 0x04, 
    0x29, 0x50, 0xbe, 0x10, 0x04, 0x29, 0xbf, 0xba, 0x10, 0x04, 0xdc, 0x66, 0x10, 0x04, 0x26, 0xe7, 
    0x90, 0x10, 0x04, 0x21, 0xeb, 0x18, 0x10, 0x04, 0x60, 0x26, 0x10, 0x04, 0x3a, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_0[95] = {
    0x0000, 0x0003, 0x0006, 0x0009, 0x000d, 0x000f, 0x0013, 0x0017, 
    0x001a, 0x001c, 0x0020, 0x0023, 0x0027, 0x0029, 0x002b, 0x002e, 
    0x0032, 0x0034, 0x0038, 0x003c, 0x0041, 0x0045, 0x004a, 0x004d, 
    0x0051, 0x0054, 0x0057, 0x005a, 0x005e, 0x0062, 0x0066, 0x006a, 
    0x006d, 0x0071, 0x0075, 0x0079, 0x007d, 0x0081, 0x0085, 0x0089, 
    0x008b, 0x008f, 0x0093, 0x0097, 0x009a, 0x009e, 0x00a2, 0x00a6, 
    0x00aa, 0x00ae, 0x00b2, 0x00b6, 0x00ba, 0x00be, 0x00c0, 0x00c4, 
    0x00c8, 0x00cc, 0x00cf, 0x00d3, 0x00d5, 0x00da, 0x00dd, 0x00e0, 
    0x00e3, 0x00e6, 0x00ea, 0x00ed, 0x00f2, 0x00f6, 0x00f9, 0x00fc, 
    0x0100, 0x0104, 0x0107, 0x010c, 0x0111, 0x0114, 0x0118, 0x011c, 
    0x0120, 0x0125, 0x0129, 0x012d, 0x012f, 0x0133, 0x0137, 0x013c, 
    0x013f, 0x0144, 0x0149, 0x014d, 0x0152, 0x0157, 0x015b, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_1[345] = {
    0x04, 0xeb, 0x8c, 0x04, 0xc4, 0x90, 0x63, 0x04, 0x94, 0x81, 0x04, 0x43, 0x10, 0x04, 0xd4, 0xd5, 
    0x10, 0x04, 0x21, 0xeb, 0x18, 0x10, 0x04, 0x99, 0x83, 0x10, 0x04, 0x47, 0x10, 0x04, 0xe4, 0x5f, 
    0x10, 0x04, 0x26, 0x4a, 0x10, 0x04, 0x1c, 0x76, 0x04, 0x31, 0x77, 0x04, 0x00, 0xbb, 0x10, 0x04, 
    0x44, 0x77, 0x04, 0x35, 0x10, 0x04, 0x46, 0x10, 0x04, 0x00, 0x6d, 0xe0, 0x04, 0x41, 0x90, 0x10, 
    0x04, 0x19, 0x7e, 0x10, 0x04, 0xbd, 0x10, 0x04, 0xd4, 0x6d, 0x10, 0x04, 0x26, 0x2e, 0x8b, 0x10, 
    0x04, 0x62, 0x6f, 0x10, 0x04, 0x8a, 0x7f, 0x10, 0x04, 0xd3, 0x10, 0x04, 0x1c, 0xe7, 0xe0, 0x04, 
    0x21, 0xbd, 0x10, 0x04, 0xb1, 0x10, 0x04, 0x8e, 0x62, 0x90, 0x10, 0x04, 0x8b, 0xbb, 0xb8, 0x04, 
    0x22, 0x5a, 0xe0, 0x04, 0x86, 0x83, 0xcc, 0x04, 0x00, 0x78, 0x10, 0x04, 0x89, 0x55, 0xcc, 0x04, 
    0xa7, 0x55, 0xcc, 0x04, 0x34, 0xe9, 0xcc, 0x04, 0x44, 0x9c, 0x10, 0x04, 0x3a, 0xf2, 0x04, 0xe4, 
    0xa9, 0x34, 0x04, 0x86, 0x3d, 0x71, 0x04, 0x2f, 0xf2, 0x04, 0x2c, 0xf2, 0x04, 0x0f, 0x86, 0xf2, 
    0x04, 0x86, 0xa7, 0x71, 0x04, 0x2f, 0x81, 0x04, 0x2c, 0x81, 0x04, 0xcb, 0x04, 0x27, 0xf2, 0x10, 
    0x04, 0x0f, 0xde, 0x10, 0x04, 0x21, 0x5f, 0xa8, 0x04, 0x00, 0xef, 0x04, 0x49, 0xa8, 0x04, 0x95, 
    0x10, 0x04, 0x34, 0xee, 0x10, 0x04, 0x62, 0x46, 0x10, 0x04, 0xa0, 0x73, 0x10, 0x04, 0x30, 0x4f, 
    0x89, 0x04, 0x20, 0x4f, 0x89, 0x04, 0x2c, 0x84, 0x89, 0x04, 0xb3, 0x04, 0x20, 0xe9, 0x63, 0x04, 
    0x4e, 0x7e, 0x10, 0x04, 0x80, 0x5d, 0x04, 0xf6, 0xa8, 0x04, 0xe7, 0xa8, 0x04, 0xea, 0xcf, 0x10, 
    0x04, 0x00, 0x75, 0xa8, 0x04, 0x63, 0xa8, 0x04, 0x00, 0x61, 0xa8, 0x04, 0xc6, 0x04, 0x29, 0xe0, 
    0xba, 0x10, 0x04, 0x22, 0x36, 0x10, 0x04, 0x2f, 0x72, 0x10, 0x04, 0x2c, 0x72, 0x10, 0x04, 0xa5, 
    0x04, 0xf6, 0xd7, 0x10, 0x04, 0x4b, 0x8c, 0x04, 0x89, 0x8c, 0x04, 0x63, 0xd7, 0x10, 0x04, 0x2d, 
    0x48, 0xe1, 0x04, 0xb5, 0x92, 0x22, 0x04, 0x22, 0xad, 0x04, 0xb6, 0x04, 0x0f, 0xe8, 0x04, 0xb5, 
    0xad, 0x04, 0x47, 0xcd, 0x04, 0xeb, 0xea, 0x10, 0x04, 0x1e, 0xaa, 0x65, 0x04, 0x1a, 0x5a, 0xe1, 
    0x04, 0x1f, 0x50, 0xe1, 0x04, 0x19, 0x32, 0xe1, 0x04, 0x0f, 0xff, 0x04, 0xbd, 0x83, 0x5a, 0x04, 
    0x29, 0x90, 0xd5, 0x10, 0x04, 0x34, 0x5a, 0xba, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_1[95] = {
    0x0000, 0x0003, 0x0007, 0x000a, 0x000d, 0x0011, 0x0016, 0x001a, 
    0x001d, 0x0021, 0x0025, 0x0028, 0x002b, 0x002f, 0x0032, 0x0035, 
    0x0038, 0x003c, 0x0040, 0x0044, 0x0047, 0x004b, 0x0050, 0x0054, 
    0x0058, 0x005b, 0x005f, 0x0063, 0x0066, 0x006b, 0x006f, 0x0073, 
    0x0077, 0x007b, 0x007f, 0x0083, 0x0087, 0x008b, 0x008e, 0x0092, 
    0x0096, 0x0099, 0x009c, 0x00a0, 0x00a4, 0x00a7, 0x00aa, 0x00ac, 
    0x00b0, 0x00b4, 0x00b8, 0x00bb, 0x00be, 0x00c1, 0x00c5, 0x00c9, 
    0x00cd, 0x00d1, 0x00d5, 0x00d9, 0x00db, 0x00df, 0x00e3, 0x00e6, 
    0x00e9, 0x00ec, 0x00f0, 0x00f4, 0x00f7, 0x00fb, 0x00fd, 0x0102, 
    0x0106, 0x010a, 0x010e, 0x0110, 0x0114, 0x0117, 0x011a, 0x011e, 
    0x0122, 0x0126, 0x0129, 0x012b, 0x012e, 0x0131, 0x0134, 0x0138, 
    0x013c, 0x0140, 0x0144, 0x0148, 0x014b, 0x014f, 0x0154, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_2[3] = {
    0x06, 0x00, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_2[1] = {
    0x0000, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_3[12] = {
    0x04, 0x2d, 0xb9, 0x04, 0x1e, 0x5e, 0x71, 0x00, 0x04, 0xfa, 0x42, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_3[16] = {
    0x0000, 0x0003, 0x0007, 0x0007, 0x0007, 0x0007, 0x0007, 0x0007, 
    0x0007, 0x0007, 0x0007, 0x0007, 0x0007, 0x0007, 0x0008, 0x0008, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_4[8] = {
    0x04, 0x0f, 0xb7, 0x00, 0x04, 0x47, 0x66, 0x71, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_4[7] = {
    0x0000, 0x0003, 0x0003, 0x0003, 0x0003, 0x0004, 0x0004, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_5[3] = {
    0x06, 0x00, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_5[1] = {
    0x0000, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_6[3] = {
    0x06, 0x00, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_6[1] = {
    0x0000, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_7[6] = {
    0x04, 0xf7, 0x00, 0x04, 0x8d, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_7[5] = {
    0x0000, 0x0002, 0x0002, 0x0002, 0x0003, 
};

static const gU8 mf_rlefont_tom_thumb_glyph_data_8[5] = {
    0x04, 0x2d, 0x6f, 0x90, 0x10, 
};

static const gU16 mf_rlefont_tom_thumb_glyph_offsets_8[1] = {
    0x0000, 
};

static const struct mf_rlefont_char_range_s mf_rlefont_tom_thumb_char_ranges[] = {
    {32, 95, mf_rlefont_tom_thumb_glyph_offsets_0, mf_rlefont_tom_thumb_glyph_data_0},
    {161, 95, mf_rlefont_tom_thumb_glyph_offsets_1, mf_rlefont_tom_thumb_glyph_data_1},
    {285, 1, mf_rlefont_tom_thumb_glyph_offsets_2, mf_rlefont_tom_thumb_glyph_data_2},
    {338, 16, mf_rlefont_tom_thumb_glyph_offsets_3, mf_rlefont_tom_thumb_glyph_data_3},
    {376, 7, mf_rlefont_tom_thumb_glyph_offsets_4, mf_rlefont_tom_thumb_glyph_data_4},
    {3748, 1, mf_rlefont_tom_thumb_glyph_offsets_5, mf_rlefont_tom_thumb_glyph_data_5},
    {5024, 1, mf_rlefont_tom_thumb_glyph_offsets_6, mf_rlefont_tom_thumb_glyph_data_6},
    {8226, 5, mf_rlefont_tom_thumb_glyph_offsets_7, mf_rlefont_tom_thumb_glyph_data_7},
    {8364, 1, mf_rlefont_tom_thumb_glyph_offsets_8, mf_rlefont_tom_thumb_glyph_data_8},
};

const struct mf_rlefont_s mf_rlefont_tom_thumb = {
    {
    "-Raccoon-Fixed4x6-Medium-R-Normal--6-60-75-75-P-40-ISO10646-1",
    "tom_thumb",
    3, /* width */
    6, /* height */
    4, /* min x advance */
    6, /* max x advance */
    0, /* baseline x */
    5, /* baseline y */
    6, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_tom_thumb_dictionary_data,
    mf_rlefont_tom_thumb_dictionary_offsets,
    232, /* rle dict count */
    232, /* total dict count */
    9, /* char range count */
    mf_rlefont_tom_thumb_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_tom_thumb_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_tom_thumb
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_tom_thumb_listentry)
#endif


/* End of automatically generated font definition for tom_thumb. */

